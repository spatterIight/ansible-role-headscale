{#
SPDX-FileCopyrightText: 2024 Nikita Chernyi
SPDX-FileCopyrightText: 2025 Slavi Pantaleev
SPDX-FileCopyrightText: 2025 Suguru Hirahara

SPDX-License-Identifier: AGPL-3.0-or-later
#}

[Unit]
Description=Headscale ({{ headscale_identifier }})
{% for service in headscale_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}
{% for service in headscale_systemd_wanted_services_list %}
Wants={{ service }}
{% endfor %}
DefaultDependencies=no

[Service]
Type=simple
Environment="HOME={{ devture_systemd_docker_base_systemd_unit_home_path }}"
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ headscale_identifier }} 2>/dev/null || true'
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ headscale_identifier }} 2>/dev/null || true'

ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} create \
      --rm \
      --name={{ headscale_identifier }} \
      --log-driver=none \
      --user={{ headscale_uid }}:{{ headscale_gid }} \
      --cap-drop=ALL \
      --read-only \
      --network={{ headscale_container_network }} \
      {% if headscale_container_hostname %}
      --hostname={{ headscale_container_hostname }} \
      {% endif %}
      {% if headscale_container_http_api_bind_port %}
      -p {{ headscale_container_http_api_bind_port }}:8080/tcp \
      {% endif %}
      {% if headscale_container_http_metrics_bind_port %}
      -p {{ headscale_container_http_metrics_bind_port }}:9090/tcp \
      {% endif %}
      --env-file={{ headscale_base_path }}/env \
      --label-file={{ headscale_base_path }}/labels \
      --mount type=bind,src={{ headscale_config_path }},dst=/etc/headscale \
      --mount type=bind,src={{ headscale_data_path }},dst=/var/lib/headscale \
      {% for volume in headscale_container_additional_volumes %}
      --mount type={{ volume.type | default('bind' if '/' in volume.src else 'volume') }},src={{ volume.src }},dst={{ volume.dst }}{{ (',' + volume.options) if volume.options else '' }} \
      {% endfor %}
      --tmpfs /var/run/headscale:mode=0755,uid={{ headscale_uid }},gid={{ headscale_gid }} \
      {% for arg in headscale_container_extra_arguments %}
      {{ arg }} \
      {% endfor %}
      {{ headscale_container_image }} \
      {{ headscale_container_command }}

{% for network in headscale_container_additional_networks %}
ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} network connect {{ network }} {{ headscale_identifier }}
{% endfor %}

ExecStart={{ devture_systemd_docker_base_host_command_docker }} start --attach {{ headscale_identifier }}

ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ headscale_identifier }} 2>/dev/null || true'
ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ headscale_identifier }} 2>/dev/null || true'

Restart=always
RestartSec=30
SyslogIdentifier={{ headscale_identifier }}

[Install]
WantedBy=multi-user.target
